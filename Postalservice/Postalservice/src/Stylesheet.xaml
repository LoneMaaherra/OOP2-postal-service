<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Postalservice.src"
                    xmlns:UC="clr-namespace:Postalservice.src.userControl">

    <SolidColorBrush x:Key="HeaderColor">#BF646FD9</SolidColorBrush>
    <SolidColorBrush x:Key="MenuButtonColor">#BF253BCB</SolidColorBrush>
    <SolidColorBrush x:Key="PanelBackgroundColor">#998FC1F9</SolidColorBrush>
    <SolidColorBrush x:Key="SmallButtonEnabledColor">#253BCB</SolidColorBrush>
    <SolidColorBrush x:Key="SmallButtonDisabledColor">#9D4E5DB8</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonTextColor">#E5E9FF</SolidColorBrush>
    <SolidColorBrush x:Key="HeaderFontColor">#1D2140</SolidColorBrush>
    <SolidColorBrush x:Key="DefaultBackgroundColor">#929dd1</SolidColorBrush>
    <SolidColorBrush x:Key="TextBoxColor">#565b73</SolidColorBrush>
    <SolidColorBrush x:Key="ErrorColor">#C23A5F</SolidColorBrush>
    

    <FontFamily x:Key="Poppins">pack://application:,,,/src/assets/Fonts/Poppins/#Poppins</FontFamily>
    <FontFamily x:Key="Comfortaa">pack://application:,,,/src/assets/Fonts/Comfortaa/#Comfortaa</FontFamily>
    <FontFamily x:Key="Overpass">pack://application:,,,/src/assets/Fonts/Overpass/#Overpass</FontFamily>
    <FontFamily x:Key="Atiba">pack://application:,,,/src/assets/Fonts/Atiba/#Atiba</FontFamily>

    <Style TargetType="Page" x:Key="PageBackground">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/src/assets/background.png" 
                            Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="UC:LogIn">
        <Setter Property="FontFamily" Value="{StaticResource Comfortaa}"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="LabelForeground" Value="Black"/>
        <Setter Property="ErrorMessageForeground" Value="PaleVioletRed"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TextBoxColor}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="{StaticResource Comfortaa}"/>
    </Style>
    
    <Style TargetType="Button" x:Key="MenuButtonStyle">
        <Setter Property="Height" Value="155"/>
        <Setter Property="Width" Value="270"/>
        <Setter Property="FontFamily" Value="{StaticResource Poppins}"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextColor}"/>

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{StaticResource MenuButtonColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="border" 
                        BorderThickness="0"
                        BorderBrush="Black" 
                        Background="{TemplateBinding Background}"
                        CornerRadius="30">
                        <ContentPresenter 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="IsMouseOver" 
                            Value="True">
                            <Setter 
                                Property="Opacity" 
                                Value="0.8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SmallButtonStyle">
        <Setter Property="Height" Value="65"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="FontFamily" Value="{StaticResource Poppins}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonTextColor}"/>

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="{StaticResource SmallButtonEnabledColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
                        x:Name="border" 
                        BorderThickness="0"
                        BorderBrush="Black" 
                        Background="{TemplateBinding Background}"
                        CornerRadius="15">
                        <ContentPresenter 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger 
                            Property="IsMouseOver" 
                            Value="True">
                            <Setter 
                                Property="Opacity" 
                                Value="0.8" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Background"
                                Value="{StaticResource SmallButtonDisabledColor}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="IconButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment"
                Value="Stretch"/>
        <Setter Property="HorizontalAlignment"
                Value="Left"/>
        <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                        x:Name="border" 
                        BorderThickness="0"
                        BorderBrush="Black" 
                        Background="{TemplateBinding Background}">
                            <ContentPresenter 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger 
                            Property="IsMouseOver" 
                            Value="True">
                                <Setter 
                                Property="Opacity" 
                                Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    
    <Style TargetType="UserControl" x:Key="HeaderBackground">
        <Setter Property="VerticalAlignment"
                Value="Top"/>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"/>
        <Setter Property="Height"
                Value="120"/>
        <Setter
               Property="Background"
               Value="{StaticResource HeaderColor}"></Setter>
    </Style>

    <Style TargetType="Rectangle" x:Key="PanelBackground">
        <Setter Property="VerticalAlignment"
                Value="Stretch"/>
        <Setter Property="HorizontalAlignment"
                Value="Stretch"/>
        <!--<Setter Property="Margin"
                Value="100,250,100,100"/>-->
        <Setter Property="RadiusX"
                Value="50"/>
        <Setter Property="RadiusY"
                Value="50"/>
        <Setter
               Property="Fill"
               Value="{StaticResource PanelBackgroundColor}"></Setter>
    </Style>

    <SolidColorBrush x:Key="CoolBluesBackground">#FF548C93</SolidColorBrush>
    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                          StartPoint="0,0"
                          EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                                Offset="0" />
                <GradientStop Color="#600000FF"
                                Offset="0.4" />
                <GradientStop Color="#600000FF"
                                Offset="0.6" />
                <GradientStop Color="#000000FF"
                                Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style TargetType="Grid" x:Key="FillOutFormStyle">
        <Style.Resources>
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="25"/>
                <Setter Property="FontFamily" Value="{StaticResource Comfortaa}"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="FontSize" Value="25"/>
                <Setter Property="Foreground" Value="{StaticResource ErrorColor}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />

                        <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">

                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                            <Setter Property="Foreground" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>

                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>